#include <Arduino.h>
#include "PlugInHomeCinema71.h"
#include "HomeCinema71_IC_1_PARAM.h"

extern void ADAU1452_WRITE_REGISTER( uint16_t reg, byte msb, byte lsb );
extern void ADAU1452_WRITE_BLOCK( uint16_t regaddr, byte val[], uint16_t len ) ;

void PlugInHomeCinema71::selectSpdifLeftChannel( void )
{
  uint32_t data = 0x00000000;
  byte val[4];
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS13INDEX_ADDR, val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS5INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS17INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS23INDEX_ADDR, val, 4);
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS29INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS35INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS41INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS47INDEX_ADDR, val, 4 );

  data = 0x00000004;
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ALG0_MONOMUXSIGMA300NS14INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ALG0_MONOMUXSIGMA300NS6INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ALG0_MONOMUXSIGMA300NS18INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ALG0_MONOMUXSIGMA300NS24INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ALG0_MONOMUXSIGMA300NS30INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ALG0_MONOMUXSIGMA300NS36INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ALG0_MONOMUXSIGMA300NS42INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ALG0_MONOMUXSIGMA300NS48INDEX_ADDR, val, 4 );
}

void PlugInHomeCinema71::selectSpdifRightChannel( void )
{
  uint32_t data = 0x00000001;
  byte val[4];
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS13INDEX_ADDR, val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS5INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS17INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS23INDEX_ADDR, val, 4);
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS29INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS35INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS41INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_SPDIF_ALG0_MONOMUXSIGMA300NS47INDEX_ADDR, val, 4 );

  data = 0x00000004;
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ALG0_MONOMUXSIGMA300NS14INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ALG0_MONOMUXSIGMA300NS6INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ALG0_MONOMUXSIGMA300NS18INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ALG0_MONOMUXSIGMA300NS24INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ALG0_MONOMUXSIGMA300NS30INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ALG0_MONOMUXSIGMA300NS36INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ALG0_MONOMUXSIGMA300NS42INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ALG0_MONOMUXSIGMA300NS48INDEX_ADDR, val, 4 );
}

void PlugInHomeCinema71::selectAnalogXLR( void )
{
  uint32_t data = 0x00000000;
  byte val[4];
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS9INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS1INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS7INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS19INDEX_ADDR, val, 4);
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS25INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS31INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS37INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS43INDEX_ADDR, val, 4 );

  data = 0x00000000;
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ALG0_MONOMUXSIGMA300NS14INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ALG0_MONOMUXSIGMA300NS6INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ALG0_MONOMUXSIGMA300NS18INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ALG0_MONOMUXSIGMA300NS24INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ALG0_MONOMUXSIGMA300NS30INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ALG0_MONOMUXSIGMA300NS36INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ALG0_MONOMUXSIGMA300NS42INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ALG0_MONOMUXSIGMA300NS48INDEX_ADDR, val, 4 );
}

void PlugInHomeCinema71::selectAnalogRCA( void )
{
  uint32_t data = 0x00000004;
  byte val[4];
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS9INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS1INDEX_ADDR,  val, 4 ); 
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS7INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS19INDEX_ADDR, val, 4);
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS25INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS31INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS37INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ANALOG_ALG0_MONOMUXSIGMA300NS43INDEX_ADDR, val, 4 );

  data = 0x00000000;
  val[0] = (data >> 24 ) & 0xFF;
  val[1] = (data >> 16 ) & 0xFF;
  val[2] = (data >> 8 ) & 0xFF;
  val[3] = data & 0xFF;
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_1_NX1_1_ALG0_MONOMUXSIGMA300NS14INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_2_NX1_1_ALG0_MONOMUXSIGMA300NS6INDEX_ADDR,  val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_3_NX1_1_ALG0_MONOMUXSIGMA300NS18INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_4_NX1_1_ALG0_MONOMUXSIGMA300NS24INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_5_NX1_1_ALG0_MONOMUXSIGMA300NS30INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_6_NX1_1_ALG0_MONOMUXSIGMA300NS36INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_7_NX1_1_ALG0_MONOMUXSIGMA300NS42INDEX_ADDR, val, 4 );
  ADAU1452_WRITE_BLOCK( MOD_INPUTSELECT_8_NX1_1_ALG0_MONOMUXSIGMA300NS48INDEX_ADDR, val, 4 );
}
